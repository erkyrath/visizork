# Game commentary source.

ABOUT: Welcome to the commentary track!

rtn:V-VERSION: Print the title, release, and serial number.
	This function is shared between all three Zorks, which is why it has code to print all three titles. The passages meant for Zork 2 and 3 were skipped when compiling Zork 1. Skipped code is shaded green here.

src:GVERBS-90: The TRS-80 interpreter set a special bit which told the game to change certain behavior for no-doubt-contractual reasons. For Zork 1, it adds the line “Licensed to Tandy Corporation”, and also skips [mentioning Zork 2/3|~src:1ACTIONS-390] at the end.
	For a complete list of “Tandy bit” behavior changes in Infocom games, [see this page|https://ifarchive.org/if-archive/infocom/info/tandy_bits.html].

src:1ACTIONS-390: On the TRS-80, this skips mentioning Zork 2/3. See [*src:GVERBS-90].

objtree-legend: In this list, `Rooms` are rooms and `Items` are regular items. (Sometimes portable, sometimes not.)
	`Scen` indicates scenery objects. These exist in multiple places; for example, the [~obj:WHITE-HOUSE] is visible from many outdoor locations. Sometimes as “You can’t see that from here”, but it’s the same object.
	`Glob` indicates a global object, which is *always* visible, or at least mentionable. For example, [~obj:GRUE] is global – not because grues are always present, but so you can always ask `WHAT IS A GRUE`.

obj:local-globals: This is a container for scenery objects like [~obj:WHITE-HOUSE], which are visible from many locations in the game.

src:gglobals-26: This refers to the word `ZZMGCK` in [~obj:local-globals], above.
	Why is this synonym necessary? Does it need to be alphabetically last? Not clear! Most Infocom games have it (or a variation), but some say “No, this synonym doesn’t need to exist” instead.
	If you type `EXAMINE ZZMGCK`, the parser finds [~obj:local-globals]. But that object is nameless, so you get a garbage reply. Go on, try it.

obj:adventurer: Yes, the player’s printed name is “cretin”, although the game rarely says so. (The death message for `BURN BOOK` mentions it.) This sort of sarcastic insult hasn’t aged too well, but MIT culture had a lot of it. Compare [*glob:WINNER], and also the old MIT [Jargon File|https://jargon-file.org/archive/jargon-1.0.0.33.dos.txt].
	Note that if you refer to `ME` (or `CRETIN`), you get the [*obj:ME] global object, not the `ADVENTURER`.

obj:me: A global object which is always in scope. Commands referring to `ME` hit this, rather than [*obj:ADVENTURER], which is a stub that moves around the map.
	Because of this, parser messages mostly refer to you as “you”, even though the [*obj:ADVENTURER]’s printed name is “cretin”.

glob:player: `PLAYER` is always the [~obj:ADVENTURER]. Compare [*glob:WINNER].

glob:winner: `WINNER` is the actor in the current command. (Compare [*glob:PLAYER].) 
	`WINNER` is usually [~obj:ADVENTURER], but for a command like `ROBOT, GO EAST` it shifts to the named NPC. (But Zork 1 has no commandable NPCs, so this doesn’t come up.)
	“Winner” is just as sarcastic as “[*cretin|obj:adventurer]”, but from the other side.

glob:here: The location of the [*glob:WINNER].

glob:c-ints: Indicates how much of the timer table ([*glob:C-TABLE]) is used. This counts down from `C-TABLELEN`, which is 180.

glob:c-table: The timer table. See the “Timers” tab for a current listing.

timers-legend: A list of the timers running (or paused) in the timer table ([~glob:C-TABLE]). This list only grows as you play; timers can be added, started, and stopped, but not removed.
	The [~rtn:I-LANTERN] and [~rtn:I-CANDLES] timers count down to the next dimming stage. Note that the candles politely don’t start counting until you pick them up.
	The [~rtn:I-THIEF] and [~rtn:I-SWORD] timers start at -1, meaning they run “forever”. (The sword runs when you are holding it; the thief runs until you kill him.) In fact they will probably stop working after 65535 turns, but back then nobody tried this!

glob:c-demons: Indicates how much of the timer table is used for daemons. The difference between daemons and timers is that timers run every turn; daemons run every *input*, even if no turn passes. But Zork does not use daemons.

glob:p-won: Set if the parser successfully parsed a command. (As opposed to a blank line or an error.)
	No relation to whether the *player* has won; that’s [*glob:WON-FLAG].

glob:won-flag: Set when you reach 350 points. See [rtn:SCORE-UPD].
	Oddly, this global is defined in two places in the source. See [gverbs.zil|~src:GVERBS-1743].

src:GVERBS-1743: This global is also defined in [1dungeon.zil|*glob:won-flag]. The compiler seems to have been okay with this.

glob:lucky: Set false if you break a mirror. Yes, this hurts probability checks; see [~rtn:ZPROB].
	Oddly, this global is defined in two places in the source. See [1actions.zil|~src:1ACTIONS-940]. (Don’t worry, `T` and `1` are the same value.)
	
src:1ACTIONS-940: This global is also defined in [gverbs.zil|*glob:lucky]. The compiler seems to have been okay with this. (Don’t worry, `T` and `1` are the same value.)

rtn:score-upd: Increases (or decreases) your score. Also checks whether you’ve reached 350, which sets [glob:WON-FLAG] and unlocks the secret [~obj:MAP] and the [~obj:STONE-BARROW].

glob:lamp-table: This table shows the successive stages of the lamp going out. The *first* stage is 200 turns, which is set in [~rtn:GO], not here.

rtn:GO: Set up the world at the start of the game. Start the timers. Print the banner. Set all those useful globals like [~glob:HERE] and [~glob:PLAYER].

obj:songbird: The songbird is always present but never in reach. Except when using the [~obj:CANARY], and even then the bird flies away before you can interact with it.

obj:maze-1: Everybody loves a maze.
	[Enter the maze?|com-maze-1]

com-maze-1: You are in a maze of twisty little passages, all different.
	You can go [north|com-maze-11], [east|com-maze-9], [west|com-maze-10], [northwest|com-maze-8], or [up|com-maze-7].

com-maze-2: You are in a little maze of twisting passages, all different.
	You can go [south|com-maze-12], [northwest|com-maze-6], [southwest|com-maze-3], [southeast|com-maze-7], or [up|com-maze-11].

com-maze-3: You are in a maze of twisting little passages, all different.
	You can go [east|com-maze-2], [northeast|com-maze-7], [southeast|com-maze-4], or [up|com-maze-8].

com-maze-4: You are in a little maze of twisty passages, all different.
	You can go [north|com-maze-5], [northeast|com-maze-9], [southwest|com-maze-8], or [up|com-maze-3].

com-maze-5: You are in a twisting maze of little passages, all different.
	You can go [north|com-maze-9], [west|com-maze-4], [northeast|com-maze-6], or [northwest|com-maze-10].

com-maze-6: You are in a twisting little maze of passages, all different.
	You can go [west|com-maze-11], [southeast|com-maze-5], [southwest|com-maze-2], or [up|com-maze-10].

com-maze-7: You are in a twisty little maze of passages, all different.
	You can go [north|com-maze-1], [west|com-maze-8], [northeast|com-maze-10], [southeast|com-maze-3], or [up|com-maze-2].

com-maze-8: You are in a twisty maze of little passages, all different.
	You can go [east|com-maze-1], [west|com-maze-3], [south|com-maze-7], [northwest|com-maze-9], or [up|com-maze-4].

com-maze-9: You are in a little twisty maze of passages, all different.
	You can go [north|com-maze-8], [south|com-maze-4], [southwest|com-maze-10], [southeast|com-maze-1], or [down|com-maze-5].

com-maze-10: You are in a maze of little twisting passages, all different.
	You can go [west|com-maze-6], [southeast|com-maze-9], [southwest|com-maze-11], [up|com-maze-5], or [down|com-maze-1].

com-maze-11: You are in a maze of little twisty passages, all different.
	You can go [north|com-maze-6], [south|com-maze-10], [northeast|com-maze-2], [southwest|com-maze-1], or [down|com-maze-7].

com-maze-12: You have reached a dead end. There is a massive vending machine here.
	[Press the button|BATTERIES] to receive fresh batteries for your lantern!

batteries: Your lantern is now refreshed.
	(Take a look at the “Timers” tab.)

### the fumble blog post


